webpackJsonp([36940768073078],{469:function(e,t){e.exports={data:{markdownRemark:{html:"<p>In my last <a href=\"https://dwjbosman.github.io/vhdl-i-2-s-transmitter\">article</a> a VHDL I2S transmitter was presented which allows one to playback arbitrary wave data. Eventually the goal is to develop an additive synthesis engine. In this article the goal is being able to generate a sine wave.</p>\n<p>As a starting point I use this <a href=\"https://github.com/jorisvr/vhdl_sincos_gen\">VHDL sine generator</a> sub component. This generator is nicely parametrized. You can specify the number of bits in the output resolution as well as the phase input.</p>\n<p>The additive synthesis engine which is to be developed needs to be able to control the frequency of the oscillator. I am not sure yet on the required frequency resolution. I will pick a reasonable number and keep the formulas general so that the value can be easily changed later. The challenge in the development of this oscillator is to implement the following features:</p>\n<ul>\n<li>Configurable design parameter 'frequency resolution' which allows specifying how precisely the frequency can be controlled.</li>\n<li>Real time configurable parameter 'frequency', value between 1 Hz and half the sample rate. </li>\n<li>No floating point</li>\n<li>No general divisions</li>\n<li>Where possible use bit shifts to do multiplication / division.</li>\n</ul>",timeToRead:1,excerpt:"In my last  article  a VHDL I2S transmitter was presented which allows one to playback arbitrary wave data. Eventually the goal is toâ€¦",frontmatter:{title:"VHDL sine wave oscillator",cover:"/logos/wave.jpg",date:"2018-09-22 22:00",category:"FPGA",tags:["VHDL FPGA DSP"]},fields:{nextTitle:"VHDL sine wave oscillator",nextSlug:"/vhdl-sine-wave-oscillator",prevTitle:"VHDL sine wave oscillator",prevSlug:"/vhdl-sine-wave-oscillator",slug:"/vhdl-sine-wave-oscillator"}}},pathContext:{slug:"/vhdl-sine-wave-oscillator"}}}});
//# sourceMappingURL=path---vhdl-sine-wave-oscillator-7efb330bb7a89257e254.js.map